//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using StoreWebservice;

namespace StoreForm.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetData", ReplyAction = "http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetAllOrdersByCustomer", ReplyAction = "http://tempuri.org/IService1/GetAllOrdersByCustomerResponse")]
        Order[] GetAllOrdersByCustomer(int value);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetAllOrdersByCustomer", ReplyAction = "http://tempuri.org/IService1/GetAllOrdersByCustomerResponse")]
        System.Threading.Tasks.Task<Order[]> GetAllOrdersByCustomerAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        StoreWebservice.CompositeType GetDataUsingDataContract(StoreWebservice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<StoreWebservice.CompositeType> GetDataUsingDataContractAsync(StoreWebservice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Inloggen", ReplyAction="http://tempuri.org/IService1/InloggenResponse")]
        int Inloggen(string u, string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Inloggen", ReplyAction="http://tempuri.org/IService1/InloggenResponse")]
        System.Threading.Tasks.Task<int> InloggenAsync(string u, string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registreren", ReplyAction="http://tempuri.org/IService1/RegistrerenResponse")]
        string Registreren(string u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registreren", ReplyAction="http://tempuri.org/IService1/RegistrerenResponse")]
        System.Threading.Tasks.Task<string> RegistrerenAsync(string u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProducts", ReplyAction="http://tempuri.org/IService1/GetAllProductsResponse")]
        StoreWebservice.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProducts", ReplyAction="http://tempuri.org/IService1/GetAllProductsResponse")]
        System.Threading.Tasks.Task<StoreWebservice.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Buy", ReplyAction="http://tempuri.org/IService1/BuyResponse")]
        string Buy(int pid, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Buy", ReplyAction="http://tempuri.org/IService1/BuyResponse")]
        System.Threading.Tasks.Task<string> BuyAsync(int pid, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerById", ReplyAction="http://tempuri.org/IService1/GetCustomerByIdResponse")]
        StoreWebservice.Customer GetCustomerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCustomerById", ReplyAction="http://tempuri.org/IService1/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<StoreWebservice.Customer> GetCustomerByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : StoreForm.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<StoreForm.ServiceReference1.IService1>, StoreForm.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public StoreWebservice.CompositeType GetDataUsingDataContract(StoreWebservice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<StoreWebservice.CompositeType> GetDataUsingDataContractAsync(StoreWebservice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int Inloggen(string u, string p) {
            return base.Channel.Inloggen(u, p);
        }
        
        public System.Threading.Tasks.Task<int> InloggenAsync(string u, string p) {
            return base.Channel.InloggenAsync(u, p);
        }
        
        public string Registreren(string u) {
            return base.Channel.Registreren(u);
        }
        
        public System.Threading.Tasks.Task<string> RegistrerenAsync(string u) {
            return base.Channel.RegistrerenAsync(u);
        }
        
        public StoreWebservice.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<StoreWebservice.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public string Buy(int pid, int id) {
            return base.Channel.Buy(pid, id);
        }
        
        public System.Threading.Tasks.Task<string> BuyAsync(int pid, int id) {
            return base.Channel.BuyAsync(pid, id);
        }
        
        public StoreWebservice.Customer GetCustomerById(int id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<StoreWebservice.Customer> GetCustomerByIdAsync(int id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }

        public Order[] GetAllOrdersByCustomer(int value)
        {
            return base.Channel.GetAllOrdersByCustomer(value);
        }

        public System.Threading.Tasks.Task<StoreWebservice.Order[]> GetAllOrdersByCustomerAsync(int value)
        {
            return base.Channel.GetAllOrdersByCustomerAsync(value);
        }
    }
}
